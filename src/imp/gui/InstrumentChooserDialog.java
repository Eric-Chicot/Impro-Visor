/**
 * This Java Class is part of the Impro-Visor Application
 *
 * Copyright (C) 2005-2016 Robert Keller and Harvey Mudd College
 *
 * Impro-Visor is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Impro-Visor is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * merchantability or fitness for a particular purpose.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Impro-Visor; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */

package imp.gui;
import java.awt.*;
import java.awt.event.ActionListener;
import java.util.Vector;
import javax.swing.*;
import javax.swing.border.*;
import java.util.ResourceBundle;

/**
 *
 * @author  Martin Hunt
 */
public class InstrumentChooserDialog extends javax.swing.JDialog {
    
    private InstrumentPanel instruments;
    private ResourceBundle bundle2 = java.util.ResourceBundle.getBundle("imp/internationalize/Bundle"); // NOI18N
    
    /** Creates new form InstrumentChooser2 */
    public InstrumentChooserDialog(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        instruments = new InstrumentPanel();
        jScrollPane1.setViewportView(instruments);
        jScrollPane1.getVerticalScrollBar().setUnitIncrement(16);
        establishDefaultButton();  // This button only highlights the first time.
        pack();
    }
    
    public void establishDefaultButton()
    {
    getRootPane().setDefaultButton(okButton);
    }
    
    public String doLookup(int number) {
        return instruments.doLookup(number);
    }
    
    public void setValue(int number) {
        setValue(number, instruments.doLookup(number));
    }
    
    public void setValue(int number, String name) {
        selectedNumber.setText(String.valueOf(number));
        selectedName.setText(name);
        instruments.setValue(number);
    }
    
    public int getValue() {
        try {
            return Integer.parseInt(selectedNumber.getText());
        } catch (NumberFormatException e) {
        }
        return 0;
    }
    
    public void setTarget(JTextField targetNumber, JButton targetName) {
        this.targetNumber = targetNumber;
        this.targetName = targetName;
    }
    
    private void updateSelectionFromText() {
        if(selectedNumber.getText().length() > 0) {
            int value = getValue();
            instruments.setValue(value);
            selectedName.setText(instruments.doLookup(value));
        }         
    }
    
     /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        buttonPanel = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        selectedPanel = new javax.swing.JPanel();
        selectedNumber = new javax.swing.JTextField();
        selectedName = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(400, 800));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(400, 400));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jScrollPane1, gridBagConstraints);

        buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("imp/internationalize/Bundle"); // NOI18N
        cancelButton.setText(bundle.getString("InstrumentChooserDialog.cancelButton.text")); // NOI18N
        cancelButton.setDefaultCapable(false);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(cancelButton);

        okButton.setText(bundle.getString("InstrumentChooserDialog.okButton.text")); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(okButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(buttonPanel, gridBagConstraints);

        selectedPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("InstrumentChooserDialog.selectedPanel.border.title"))); // NOI18N
        selectedPanel.setLayout(new java.awt.GridBagLayout());

        selectedNumber.setMinimumSize(new java.awt.Dimension(11, 22));
        selectedNumber.setPreferredSize(new java.awt.Dimension(30, 22));
        selectedNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectedNumberActionPerformed(evt);
            }
        });
        selectedNumber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                selectedNumberFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                selectedNumberFocusLost(evt);
            }
        });
        selectedNumber.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                selectedNumberCaretPositionChanged(evt);
            }
        });
        selectedNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                selectedNumberKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        selectedPanel.add(selectedNumber, gridBagConstraints);

        selectedName.setText(bundle.getString("InstrumentChooserDialog.selectedName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 6, 0, 0);
        selectedPanel.add(selectedName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 20);
        getContentPane().add(selectedPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private JTextField targetNumber = null;
    private JButton targetName = null;
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        if(targetNumber != null)
            targetNumber.setText(selectedNumber.getText());
        if(targetName != null)
            targetName.setText(selectedName.getText());
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void selectedNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_selectedNumberKeyReleased
        updateSelectionFromText();
    }//GEN-LAST:event_selectedNumberKeyReleased

    private void selectedNumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_selectedNumberFocusLost
        updateSelectionFromText();
    }//GEN-LAST:event_selectedNumberFocusLost

    private void selectedNumberFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_selectedNumberFocusGained
        updateSelectionFromText();
    }//GEN-LAST:event_selectedNumberFocusGained

    private void selectedNumberCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_selectedNumberCaretPositionChanged
        updateSelectionFromText();
    }//GEN-LAST:event_selectedNumberCaretPositionChanged

    private void selectedNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectedNumberActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_selectedNumberActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel selectedName;
    private javax.swing.JTextField selectedNumber;
    private javax.swing.JPanel selectedPanel;
    // End of variables declaration//GEN-END:variables
    
    private class InstrumentPanel extends JPanel {
    
        /** Creates new form InstrumentChooser */
        public InstrumentPanel() {
            initInstruments();
            initComponents();
        }

        ButtonGroup buttons = new ButtonGroup();
        JTextField value = new JTextField();
        Font controlFont = new Font("Tahoma", 1, 10);
        Font groupFont = new Font("Tahoma", 1, 11);

        public void setValue(int num) {
            value.setText(String.valueOf(num));
            Instrument inst = getInstrument(num);
            if(inst.control.getParent() != null) {
                getInstrument(num).control.setSelected(true);
                scrollRectToVisible(getInstrument(num).control.getParent().getBounds());
            }
        }

        public String doLookup(int num) {
            return getInstrument(num).name;
        }
        
        private Instrument getInstrument(int num) {
            for(Group g : group) {
                if(num > g.indexEnd || num < g.indexStart)
                    continue;
                for(int i = 0; i < g.instrument.size(); i++) {
                    if(g.instrument.get(i).number == num) {
                        return g.instrument.get(i);
                    }
                }
            }
            
            return new Instrument(num, unknownInstrument);
        }

        public String getValue() {
            return value.getText();
        }

        private int globalInitCounter;

        private void initComponents() {
            int numRows = (group.size() + (other.instrument.size() > 0 ? 1 : 0) + 1) / 2;
            GridBagConstraints c = new GridBagConstraints();
            c.gridx = 0; c.gridy = 0; c.anchor = c.NORTHWEST; c.fill = c.HORIZONTAL; c.weightx = 1.0;

            GridBagLayout layout = new GridBagLayout();
            setLayout(layout);
            setOpaque(false);

            for(Group g : group) {
                add(initGroup(g), c);

                c.gridy++;
    //            if(c.gridy >= numRows) {
    //                c.gridy = 0;
    //                c.gridx++;
    //            }
            }

            if(other.instrument.size() > 0) {
                add(initGroup(other), c);
            }
        }

        private JPanel initGroup(Group g) {

            int numRows = (g.instrument.size() + 1)/2;
            GridBagLayout layout = new GridBagLayout();
            GridBagConstraints c = new GridBagConstraints();
            c.gridx = 0; c.gridy = 0; c.anchor = c.NORTHWEST;

            JPanel panel = new JPanel(layout);
            panel.setBorder(
                    BorderFactory.createTitledBorder(
                        null, g.name, TitledBorder.LEFT, TitledBorder.DEFAULT_POSITION, 
                        groupFont
                    )
                );

            for(int i = 0; i < g.instrument.size(); i++) {
                JRadioButton instrumentButton = g.instrument.get(i).control;

                buttons.add(instrumentButton);
                panel.add(instrumentButton, c);

                c.gridy++;
                if(c.gridy >= numRows) {
                    c.gridy = 0;
                    c.gridx++;
                }
            }

            return panel;
        }

        Vector<String> instrument = new Vector<String>(129, 128);
        Vector<Group> group = new Vector<Group>();
        Group other = new Group(0, 0, "Other");

        private final String unknownInstrument = bundle2.getString("InstrumentChooserDialog.Instrument.text0");

        private void initInstruments() {
            addGroup(	1	,	8	,bundle2.getString("InstrumentChooserDialog.InstrumentGroup.text0"));
            addGroup(	9	,	16	,bundle2.getString("InstrumentChooserDialog.InstrumentGroup.text1"));
            addGroup(	17	,	24	,bundle2.getString("InstrumentChooserDialog.InstrumentGroup.text2"));
            addGroup(	25	,	32	,bundle2.getString("InstrumentChooserDialog.InstrumentGroup.text3"));
            addGroup(	33	,	40	,bundle2.getString("InstrumentChooserDialog.InstrumentGroup.text4"));
            addGroup(	41	,	48	,bundle2.getString("InstrumentChooserDialog.InstrumentGroup.text5"));
            addGroup(	49	,	56	,bundle2.getString("InstrumentChooserDialog.InstrumentGroup.text6"));
            addGroup(	57	,	64	,bundle2.getString("InstrumentChooserDialog.InstrumentGroup.text7"));
            addGroup(	65	,	72	,bundle2.getString("InstrumentChooserDialog.InstrumentGroup.text8"));
            addGroup(	73	,	80	,bundle2.getString("InstrumentChooserDialog.InstrumentGroup.text9"));
            addGroup(	81	,	88	,bundle2.getString("InstrumentChooserDialog.InstrumentGroup.text10"));
            addGroup(	89	,	96	,bundle2.getString("InstrumentChooserDialog.InstrumentGroup.text11"));
            addGroup(	97	,	104	,bundle2.getString("InstrumentChooserDialog.InstrumentGroup.text12"));
            addGroup(	105	,	112	,bundle2.getString("InstrumentChooserDialog.InstrumentGroup.text13"));
            addGroup(	113	,	120	,bundle2.getString("InstrumentChooserDialog.InstrumentGroup.text14"));
            addGroup(	121	,	128	,bundle2.getString("InstrumentChooserDialog.InstrumentGroup.text15"));

            addInstrument( 1 , bundle2.getString("InstrumentChooserDialog.Instrument.text1"));
            addInstrument( 2 , bundle2.getString("InstrumentChooserDialog.Instrument.text2"));
            addInstrument( 3 , bundle2.getString("InstrumentChooserDialog.Instrument.text3"));
            addInstrument( 4 , bundle2.getString("InstrumentChooserDialog.Instrument.text4"));
            addInstrument( 5 , bundle2.getString("InstrumentChooserDialog.Instrument.text5"));
            addInstrument( 6 , bundle2.getString("InstrumentChooserDialog.Instrument.text6"));
            addInstrument( 7 , bundle2.getString("InstrumentChooserDialog.Instrument.text7"));
            addInstrument( 8 , bundle2.getString("InstrumentChooserDialog.Instrument.text8"));
            addInstrument( 9 , bundle2.getString("InstrumentChooserDialog.Instrument.text9"));
            addInstrument( 10 , bundle2.getString("InstrumentChooserDialog.Instrument.text10"));
            addInstrument( 11 , bundle2.getString("InstrumentChooserDialog.Instrument.text11"));
            addInstrument( 12 , bundle2.getString("InstrumentChooserDialog.Instrument.text12"));
            addInstrument( 13 , bundle2.getString("InstrumentChooserDialog.Instrument.text13"));
            addInstrument( 14 , bundle2.getString("InstrumentChooserDialog.Instrument.text14"));
            addInstrument( 15 , bundle2.getString("InstrumentChooserDialog.Instrument.text15"));
            addInstrument( 16 , bundle2.getString("InstrumentChooserDialog.Instrument.text16"));
            addInstrument( 17 , bundle2.getString("InstrumentChooserDialog.Instrument.text17"));
            addInstrument( 18 , bundle2.getString("InstrumentChooserDialog.Instrument.text18"));
            addInstrument( 19 , bundle2.getString("InstrumentChooserDialog.Instrument.text19"));
            addInstrument( 20 , bundle2.getString("InstrumentChooserDialog.Instrument.text20"));
            addInstrument( 21 , bundle2.getString("InstrumentChooserDialog.Instrument.text21"));
            addInstrument( 22 , bundle2.getString("InstrumentChooserDialog.Instrument.text22"));
            addInstrument( 23 , bundle2.getString("InstrumentChooserDialog.Instrument.text23"));
            addInstrument( 24 , bundle2.getString("InstrumentChooserDialog.Instrument.text24"));
            addInstrument( 25 , bundle2.getString("InstrumentChooserDialog.Instrument.text25"));
            addInstrument( 26 , bundle2.getString("InstrumentChooserDialog.Instrument.text26"));
            addInstrument( 27 , bundle2.getString("InstrumentChooserDialog.Instrument.text27"));
            addInstrument( 28 , bundle2.getString("InstrumentChooserDialog.Instrument.text28"));
            addInstrument( 29 , bundle2.getString("InstrumentChooserDialog.Instrument.text29"));
            addInstrument( 30 , bundle2.getString("InstrumentChooserDialog.Instrument.text30"));
            addInstrument( 31 , bundle2.getString("InstrumentChooserDialog.Instrument.text31"));
            addInstrument( 32 , bundle2.getString("InstrumentChooserDialog.Instrument.text32"));
            addInstrument( 33 , bundle2.getString("InstrumentChooserDialog.Instrument.text33"));
            addInstrument( 34 , bundle2.getString("InstrumentChooserDialog.Instrument.text34"));
            addInstrument( 35 , bundle2.getString("InstrumentChooserDialog.Instrument.text35"));
            addInstrument( 36 , bundle2.getString("InstrumentChooserDialog.Instrument.text36"));
            addInstrument( 37 , bundle2.getString("InstrumentChooserDialog.Instrument.text37"));
            addInstrument( 38 , bundle2.getString("InstrumentChooserDialog.Instrument.text38"));
            addInstrument( 39 , bundle2.getString("InstrumentChooserDialog.Instrument.text39"));
            addInstrument( 40 , bundle2.getString("InstrumentChooserDialog.Instrument.text40"));
            addInstrument( 41 , bundle2.getString("InstrumentChooserDialog.Instrument.text41"));
            addInstrument( 42 , bundle2.getString("InstrumentChooserDialog.Instrument.text42"));
            addInstrument( 43 , bundle2.getString("InstrumentChooserDialog.Instrument.text43"));
            addInstrument( 44 , bundle2.getString("InstrumentChooserDialog.Instrument.text44"));
            addInstrument( 45 , bundle2.getString("InstrumentChooserDialog.Instrument.text45"));
            addInstrument( 46 , bundle2.getString("InstrumentChooserDialog.Instrument.text46"));
            addInstrument( 47 , bundle2.getString("InstrumentChooserDialog.Instrument.text47"));
            addInstrument( 48 , bundle2.getString("InstrumentChooserDialog.Instrument.text48"));
            addInstrument( 49 , bundle2.getString("InstrumentChooserDialog.Instrument.text49"));
            addInstrument( 50 , bundle2.getString("InstrumentChooserDialog.Instrument.text50"));
            addInstrument( 51 , bundle2.getString("InstrumentChooserDialog.Instrument.text51"));
            addInstrument( 52 , bundle2.getString("InstrumentChooserDialog.Instrument.text52"));
            addInstrument( 53 , bundle2.getString("InstrumentChooserDialog.Instrument.text53"));
            addInstrument( 54 , bundle2.getString("InstrumentChooserDialog.Instrument.text54"));
            addInstrument( 55 , bundle2.getString("InstrumentChooserDialog.Instrument.text55"));
            addInstrument( 56 , bundle2.getString("InstrumentChooserDialog.Instrument.text56"));
            addInstrument( 57 , bundle2.getString("InstrumentChooserDialog.Instrument.text57"));
            addInstrument( 58 , bundle2.getString("InstrumentChooserDialog.Instrument.text58"));
            addInstrument( 59 , bundle2.getString("InstrumentChooserDialog.Instrument.text59"));
            addInstrument( 60 , bundle2.getString("InstrumentChooserDialog.Instrument.text60"));
            addInstrument( 61 , bundle2.getString("InstrumentChooserDialog.Instrument.text61"));
            addInstrument( 62 , bundle2.getString("InstrumentChooserDialog.Instrument.text62"));
            addInstrument( 63 , bundle2.getString("InstrumentChooserDialog.Instrument.text63"));
            addInstrument( 64 , bundle2.getString("InstrumentChooserDialog.Instrument.text64"));
            addInstrument( 65 , bundle2.getString("InstrumentChooserDialog.Instrument.text65"));
            addInstrument( 66 , bundle2.getString("InstrumentChooserDialog.Instrument.text66"));
            addInstrument( 67 , bundle2.getString("InstrumentChooserDialog.Instrument.text67"));
            addInstrument( 68 , bundle2.getString("InstrumentChooserDialog.Instrument.text68"));
            addInstrument( 69 , bundle2.getString("InstrumentChooserDialog.Instrument.text69"));
            addInstrument( 70 , bundle2.getString("InstrumentChooserDialog.Instrument.text70"));
            addInstrument( 71 , bundle2.getString("InstrumentChooserDialog.Instrument.text71"));
            addInstrument( 72 , bundle2.getString("InstrumentChooserDialog.Instrument.text72"));
            addInstrument( 73 , bundle2.getString("InstrumentChooserDialog.Instrument.text73"));
            addInstrument( 74 , bundle2.getString("InstrumentChooserDialog.Instrument.text74"));
            addInstrument( 75 , bundle2.getString("InstrumentChooserDialog.Instrument.text75"));
            addInstrument( 76 , bundle2.getString("InstrumentChooserDialog.Instrument.text76"));
            addInstrument( 77 , bundle2.getString("InstrumentChooserDialog.Instrument.text77"));
            addInstrument( 78 , bundle2.getString("InstrumentChooserDialog.Instrument.text78"));
            addInstrument( 79 , bundle2.getString("InstrumentChooserDialog.Instrument.text79"));
            addInstrument( 80 , bundle2.getString("InstrumentChooserDialog.Instrument.text80"));
            addInstrument( 81 , bundle2.getString("InstrumentChooserDialog.Instrument.text81"));
            addInstrument( 82 , bundle2.getString("InstrumentChooserDialog.Instrument.text82"));
            addInstrument( 83 , bundle2.getString("InstrumentChooserDialog.Instrument.text83"));
            addInstrument( 84 , bundle2.getString("InstrumentChooserDialog.Instrument.text84"));
            addInstrument( 85 , bundle2.getString("InstrumentChooserDialog.Instrument.text85"));
            addInstrument( 86 , bundle2.getString("InstrumentChooserDialog.Instrument.text86"));
            addInstrument( 87 , bundle2.getString("InstrumentChooserDialog.Instrument.text87"));
            addInstrument( 88 , bundle2.getString("InstrumentChooserDialog.Instrument.text88"));
            addInstrument( 89 , bundle2.getString("InstrumentChooserDialog.Instrument.text89"));
            addInstrument( 90 , bundle2.getString("InstrumentChooserDialog.Instrument.text90"));
            addInstrument( 91 , bundle2.getString("InstrumentChooserDialog.Instrument.text91"));
            addInstrument( 92 , bundle2.getString("InstrumentChooserDialog.Instrument.text92"));
            addInstrument( 93 , bundle2.getString("InstrumentChooserDialog.Instrument.text93"));
            addInstrument( 94 , bundle2.getString("InstrumentChooserDialog.Instrument.text94"));
            addInstrument( 95 , bundle2.getString("InstrumentChooserDialog.Instrument.text95"));
            addInstrument( 96 , bundle2.getString("InstrumentChooserDialog.Instrument.text96"));
            addInstrument( 97 , bundle2.getString("InstrumentChooserDialog.Instrument.text97"));
            addInstrument( 98 , bundle2.getString("InstrumentChooserDialog.Instrument.text98"));
            addInstrument( 99 , bundle2.getString("InstrumentChooserDialog.Instrument.text99"));
            addInstrument( 100 , bundle2.getString("InstrumentChooserDialog.Instrument.text100"));
            addInstrument( 101 , bundle2.getString("InstrumentChooserDialog.Instrument.text101"));
            addInstrument( 102 , bundle2.getString("InstrumentChooserDialog.Instrument.text102"));
            addInstrument( 103 , bundle2.getString("InstrumentChooserDialog.Instrument.text103"));
            addInstrument( 104 , bundle2.getString("InstrumentChooserDialog.Instrument.text104"));
            addInstrument( 105 , bundle2.getString("InstrumentChooserDialog.Instrument.text105"));
            addInstrument( 106 , bundle2.getString("InstrumentChooserDialog.Instrument.text106"));
            addInstrument( 107 , bundle2.getString("InstrumentChooserDialog.Instrument.text107"));
            addInstrument( 108 , bundle2.getString("InstrumentChooserDialog.Instrument.text108"));
            addInstrument( 109 , bundle2.getString("InstrumentChooserDialog.Instrument.text109"));
            addInstrument( 110 , bundle2.getString("InstrumentChooserDialog.Instrument.text110"));
            addInstrument( 111 , bundle2.getString("InstrumentChooserDialog.Instrument.text111"));
            addInstrument( 112 , bundle2.getString("InstrumentChooserDialog.Instrument.text112"));
            addInstrument( 113 , bundle2.getString("InstrumentChooserDialog.Instrument.text113"));
            addInstrument( 114 , bundle2.getString("InstrumentChooserDialog.Instrument.text114"));
            addInstrument( 115 , bundle2.getString("InstrumentChooserDialog.Instrument.text115"));
            addInstrument( 116 , bundle2.getString("InstrumentChooserDialog.Instrument.text116"));
            addInstrument( 117 , bundle2.getString("InstrumentChooserDialog.Instrument.text117"));
            addInstrument( 118 , bundle2.getString("InstrumentChooserDialog.Instrument.text118"));
            addInstrument( 119 , bundle2.getString("InstrumentChooserDialog.Instrument.text119"));
            addInstrument( 120 , bundle2.getString("InstrumentChooserDialog.Instrument.text120"));
            addInstrument( 121 , bundle2.getString("InstrumentChooserDialog.Instrument.text121"));
            addInstrument( 122 , bundle2.getString("InstrumentChooserDialog.Instrument.text122"));
            addInstrument( 123 , bundle2.getString("InstrumentChooserDialog.Instrument.text123"));
            addInstrument( 124 , bundle2.getString("InstrumentChooserDialog.Instrument.text124"));
            addInstrument( 125 , bundle2.getString("InstrumentChooserDialog.Instrument.text125"));
            addInstrument( 126 , bundle2.getString("InstrumentChooserDialog.Instrument.text126"));
            addInstrument( 127 , bundle2.getString("InstrumentChooserDialog.Instrument.text127"));
            addInstrument( 128 , bundle2.getString("InstrumentChooserDialog.Instrument.text128"));
 	}

        private void addGroup(int indexStart, int indexEnd, String name) {
            group.add(new Group(indexStart, indexEnd, name));
        }

        private class Group {
            public int indexStart = 0;
            public int indexEnd = 0;
            public String name;
            public Vector<Instrument> instrument;
            public Group(int indexStart, int indexEnd, String name) {
                this.indexStart = indexStart;
                this.indexEnd = indexEnd;
                this.name = name;
                this.instrument = new Vector<Instrument>(indexEnd - indexStart + 1);
            }
        }

        private class Instrument {
            public int number;
            public String name;
            public JRadioButton control;
            public Instrument(int number, String name) {
                this.number = number;
                this.name = name;
                this.control = new JRadioButton(number + ": " + name);
                this.control.setFont(controlFont);
                this.control.setPreferredSize(new Dimension(180, 16));
                this.control.setToolTipText(name);

                final int instrumentNumber = number;
                final String instrumentName = name;
                this.control.addActionListener(new ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        InstrumentChooserDialog.this.setValue(instrumentNumber, instrumentName);
                    }
                });
            }
        }

        private void addInstrument(int number, String name) {
            boolean found = false;
            for(Group g : group) {
                if(number >= g.indexStart && number <= g.indexEnd) {
                    g.instrument.add(new Instrument(number, name));
                    found = true;
                    break;
                }
            }

            // if an instrument doesn't go into any group, put it in the other group
            if(!found) {
                other.instrument.add(new Instrument(number, name));
            }
        }
    }

}
